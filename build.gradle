plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.17.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

// Set project version for publishing
version = '0.0.1'

repositories {
    mavenCentral()
    
    maven {
        name = "henkelmax.public"
        url = 'https://maven.maxhenkel.de/repository/public'
    }
}

dependencies {
    // Use macrophone for permissions
    //implementation project(':macrophone')
    
    implementation 'io.github.givimad:whisper-jni:1.7.1'
    implementation 'de.maxhenkel.rnnoise4j:rnnoise4j:2.0.2'
    
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    api 'org.slf4j:slf4j-api:2.0.16'
    
    // https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j
    api 'net.lingala.zip4j:zip4j:2.11.5'
    
    testImplementation libs.junit.jupiter
    testImplementation 'org.slf4j:slf4j-simple:2.0.17'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    testLogging.showStandardStreams = true
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        	from(components.java)
        	
            groupId = 'com.supasulley'
            artifactId = 'jscribe'
            version = '0.0.1'
            
	        pom {
	            name = 'jscribe'
	            description = 'Live audio transcription in Java for CensorCraft'
	            url = 'https://github.com/FreshSupaSulley/jscribe'
	            
	            licenses {
	                license {
	                    name = 'MIT License'
	                    url = 'https://opensource.org/license/mit'
	                }
	            }
	            
	            developers {
	                developer {
	                    id = 'eboschert'
	                    name = 'Erich Boschert'
	                }
	            }
	            
	            scm {
	                connection = 'scm:git:https://github.com/FreshSupaSulley/jscribe.git'
	                developerConnection = 'scm:git:ssh://github.com/FreshSupaSulley/jscribe.git'
	                url = 'https://github.com/FreshSupaSulley/jscribe'
	            }
	        }
	    }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}
/*
signing {
    sign publishing.publications.mavenJava
}*/

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('target/staging-deploy')
                }
            }
            /*mavenCentral {
                app {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    username = sonatypeUsername
                    password = sonatypePassword
                    authorization = 'BEARER'
                    applyMavenCentralRules = false
                    // List of directories where staged artifacts can be found.
                    stagingRepository('target/staging-deploy')
                    
                    // URL for checking artifacts may be already deployed.
                    // Additional template tokens: `groupId`, `artifactId`, `version`, `path`, `filename`.
                    verifyUrl = "https://repo1.maven.org/maven2/{{path}}/{{filename}}"
                    
                    // Registered publication namespace.
                    // Defaults to `${project.java.groupId}`.
                    namespace = 'io.github.freshsupasulley'
                    // Deployment identifier used for publication.
                    //deploymentId = 'dd9991b0-18a7-41e7-b1fe-37b8ea936f85'
                }
            }*/
        }
    }
}
