name: build

on:
  release:
    types: [created]
  # Allows us to trigger it manually
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - run: sudo apt update && sudo apt install -y build-essential cmake unzip wget

      - run: |
          cd libs/whisper-jni
          chmod +x download-test-model.sh
          ./download-test-model.sh
          chmod +x build_debian.sh
          ./build_debian.sh
          mvn test

      - run: ./gradlew build

      - uses: actions/upload-artifact@v4
        with:
          name: jscribe-linux
          path: build/libs/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - run: brew install cmake

      - run: |
          cd libs/whisper-jni
          chmod +x download-test-model.sh
          ./download-test-model.sh
          chmod +x build_macos.sh
          ./build_macos.sh
          mvn test

      - run: ./gradlew build

      - uses: actions/upload-artifact@v4
        with:
          name: jscribe-macos
          path: build/libs/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - uses: ilammy/msvc-dev-cmd@v1

      - run: |
          cd libs/whisper-jni
          ./download-test-model.ps1
          ./build_win.ps1
          mvn test
        shell: pwsh

      - run: ./gradlew build

      - uses: actions/upload-artifact@v4
        with:
          name: jscribe-windows
          path: build/libs/

  publish:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      # Move all natives into a folder
      - run: |
          SRC_DIR="libs/whisper-jni/src/main/resources"
          DEST_DIR="src/main/resources/natives"

          mkdir -p "$DEST_DIR"

          for dir in "$SRC_DIR"/*/; do
            folder_name=$(basename "$dir")
            zip_file="$DEST_DIR/$folder_name.zip"

            # Count number of non-.gitkeep files
            file_count=$(find "$dir" -type f ! -name ".gitkeep" | wc -l)

            if [ "$file_count" -eq 0 ]; then
              echo "Skipping empty or .gitkeep-only folder: $folder_name"
              continue
            fi

            echo "Zipping $folder_name â†’ $zip_file"

            # Zip the entire folder, including its name
            (cd "$SRC_DIR" && zip -r "$OLDPWD/$zip_file" "$folder_name")
          done
          
      - run: ./gradlew clean build publish
      - run: ./gradlew jreleaserDeploy
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
